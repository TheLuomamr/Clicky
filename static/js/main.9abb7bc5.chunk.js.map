{"version":3,"sources":["components/Title/Title.js","components/wrapper/wrapper.js","components/cards/cards.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","children","Wrapper","Cards","onClick","setClicked","id","alt","name","src","image","correct","best","rules","App","state","PB","_this","clickedPB","filter","match","clicked","i","length","setState","sort","b","Math","random","_this2","this","wrapper_wrapper","Title_Title","map","cards_cards","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"ssDAKeA,SAFA,SAAAC,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUJ,EAAMK,YCEvCC,SAFC,SAAAN,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMK,YCQ1CE,SARD,SAAAP,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OAAKK,QAAS,kBAAMR,EAAMS,WAAWT,EAAMU,KAAKN,UAAU,QACxDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKQ,IAAKX,EAAMY,KAAMC,IAAKb,EAAMc,mBCEnCC,SAAU,GACVC,EAAO,EACPC,EACF,gGA0GaC,6MAtGbC,MAAQ,CACNC,KACAL,UACAC,OACAC,WAGFR,WAAa,SAAAC,GAEX,IAAMU,EAAKC,EAAKF,MAAMC,GAGhBE,EAAYF,EAAGG,OAAO,SAAAC,GAAK,OAAIA,EAAMd,KAAOA,IAElD,GAAIY,EAAU,GAAGG,QAAS,CACxBV,EAAU,EACVE,EACE,qEAEF,IAAK,IAAIS,EAAI,EAAGA,EAAIN,EAAGO,OAAQD,IAC7BN,EAAGM,GAAGD,SAAU,EAGlBJ,EAAKO,SAAS,CAAEX,UAChBI,EAAKO,SAAS,CAAEb,YAChBM,EAAKO,SAAS,CAAER,YACX,GAAIL,EAAU,GAEnBO,EAAU,GAAGG,SAAU,IAGvBV,EAEcC,IACZA,EAAOD,EACPM,EAAKO,SAAS,CAAEZ,UAIlBI,EAAGS,KAAK,SAAS3B,EAAG4B,GAClB,MAAO,GAAMC,KAAKC,WAIpBX,EAAKO,SAAS,CAAER,OAChBC,EAAKO,SAAS,CAAEb,YAChBM,EAAKO,SAAS,CAAEX,cACX,CAELK,EAAU,GAAGG,SAAU,EAGvBV,EAAU,EAEVE,EAAQ,wBACRD,EAAO,GACPK,EAAKO,SAAS,CAAEZ,SAEhB,IAAK,IAAIU,EAAI,EAAGA,EAAIN,EAAGO,OAAQD,IAC7BN,EAAGM,GAAGD,SAAU,EAIlBL,EAAGS,KAAK,SAAS3B,EAAG4B,GAClB,MAAO,GAAMC,KAAKC,WAIpBX,EAAKO,SAAS,CAAER,OAChBC,EAAKO,SAAS,CAAEb,YAChBM,EAAKO,SAAS,CAAEX,oFAIX,IAAAgB,EAAAC,KACP,OACEjC,EAAAC,EAAAC,cAACgC,EAAD,KACElC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACiC,EAAD,yBAGFnC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgB8B,KAAKf,MAAMF,OAEzChB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,oBACoB8B,KAAKf,MAAMJ,QAC7Bd,EAAAC,EAAAC,cAAA,WAFF,eAGe+B,KAAKf,MAAMH,MAGzBkB,KAAKf,MAAMC,GAAGiB,IAAI,SAAAb,GAAK,OACtBvB,EAAAC,EAAAC,cAACmC,EAAD,CACE7B,WAAYwB,EAAKxB,WACjBC,GAAIc,EAAMd,GACV6B,IAAKf,EAAMd,GACXI,MAAOU,EAAMV,kBAhGP0B,aCPlBC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.9abb7bc5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Title.css\";\n\nconst Header = props => <h1 className=\"header\">{props.children}</h1>;\n\nexport default Header;\n","import React from \"react\";\nimport \"./wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./cards.css\";\n\nconst Cards = props => (\n  <div onClick={() => props.setClicked(props.id)} className=\"card\">\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Cards;\n","import React, { Component } from \"react\";\nimport Title from \"./components/Title\";\nimport Wrapper from \"./components/wrapper\";\nimport Cards from \"./components/cards\";\nimport PB from \"./PB.json\";\n\nimport \"./App.css\";\n\nlet correct = 0;\nlet best = 0;\nlet rules =\n  \"Avoid a sticky situation and click a different image each time without clicking the same one!\";\n\nclass App extends Component {\n  // Setting this.state.PB to the PB json array\n  state = {\n    PB,\n    correct,\n    best,\n    rules\n  };\n\n  setClicked = id => {\n    // copy of the state PB array\n    const PB = this.state.PB;\n\n    // Filter for the clicked match\n    const clickedPB = PB.filter(match => match.id === id);\n\n    if (clickedPB[0].clicked) {\n      correct = 0;\n      rules =\n        \"Dang! You already clicked on that one! Now you have to start over!\";\n\n      for (let i = 0; i < PB.length; i++) {\n        PB[i].clicked = false;\n      }\n\n      this.setState({ rules });\n      this.setState({ correct });\n      this.setState({ PB });\n    } else if (correct < 11) {\n      // Set its value to true\n      clickedPB[0].clicked = true;\n\n      // increment the appropriate counter\n      correct++;\n\n      if (correct > best) {\n        best = correct;\n        this.setState({ best });\n      }\n\n      // randomize cards\n      PB.sort(function(a, b) {\n        return 0.5 - Math.random();\n      });\n\n      // Set this.state.PB equal to the new PB array\n      this.setState({ PB });\n      this.setState({ correct });\n      this.setState({ rules });\n    } else {\n      // Set its value to true\n      clickedPB[0].clicked = true;\n\n      // restart guesses\n      correct = 0;\n\n      rules = \"Great Job! Try Again!\";\n      best = 12;\n      this.setState({ best });\n\n      for (let i = 0; i < PB.length; i++) {\n        PB[i].clicked = false;\n      }\n\n      // Shuffle the array randomly\n      PB.sort(function(a, b) {\n        return 0.5 - Math.random();\n      });\n\n      // Set this.state.PB equal to the new PB array\n      this.setState({ PB });\n      this.setState({ correct });\n      this.setState({ rules });\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <u>\n          <Title> PEANUT BUTTER!</Title>\n        </u>\n\n        <h3 className=\"scoreSummary\">{this.state.rules}</h3>\n\n        <h3 className=\"scoreSummary\">\n          Correct Guesses: {this.state.correct}\n          <br />\n          High Score: {this.state.best}\n        </h3>\n\n        {this.state.PB.map(match => (\n          <Cards\n            setClicked={this.setClicked}\n            id={match.id}\n            key={match.id}\n            image={match.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}